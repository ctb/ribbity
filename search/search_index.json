{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to sourmash-examples! This is a collection of examples and recipes for the sourmash software , for genomic and metagenomic sequencing data analysis. sourmash can quickly search large databases of genomes for matches to query genomes and metagenomes; see our list of available databases . sourmash also includes taxonomic exploration and classification routines for genome and metagenome analysis with either NCBI and GTDB taxonomies. The paper Large-scale sequence comparisons with sourmash (Pierce et al., 2019) gives an overview of what sourmash does and how sourmash works. Do you have questions or comments? File an issue or come chat on gitter ! Go to: All examples | All categories Start here! Example: install sourmash with pip or with conda","title":"Home"},{"location":"#welcome-to-sourmash-examples","text":"This is a collection of examples and recipes for the sourmash software , for genomic and metagenomic sequencing data analysis. sourmash can quickly search large databases of genomes for matches to query genomes and metagenomes; see our list of available databases . sourmash also includes taxonomic exploration and classification routines for genome and metagenome analysis with either NCBI and GTDB taxonomies. The paper Large-scale sequence comparisons with sourmash (Pierce et al., 2019) gives an overview of what sourmash does and how sourmash works. Do you have questions or comments? File an issue or come chat on gitter ! Go to: All examples | All categories","title":"Welcome to sourmash-examples!"},{"location":"#start-here","text":"Example: install sourmash with pip or with conda","title":"Start here!"},{"location":"1-downloading-sketching-and-searching-a-collection-of-FASTA-files/","text":"Example: downloading, sketching, and searching a collection of FASTA files sourmash-bio/sourmash-examples#1 Download 64 genomes from Awad et al., 2017 : curl -L https://osf.io/download/vbhy5 -o podar-ref.tar.gz tar xzf podar-ref.tar.gz Sketch them all in DNA space using default parameters, using GNU parallel per https://github.com/sourmash-bio/sourmash/issues/1796: parallel -j 8 sourmash sketch dna {} -o {}.sig --name-from-first ::: $(ls *.fa) Build a search database from all the signature files for k=31: sourmash sig cat *.sig -k 31 -o podar-ref.zip Search the database with one of the Shewanella genomes: sourmash search 63.fa.sig podar-ref.zip and you should see: similarity match ---------- ----- similarity match ---------- ----- 100.0% NC_011663.1 Shewanella baltica OS223, complete genome 32.1% NC_009665.1 Shewanella baltica OS185, complete genome","title":"Example: downloading, sketching, and searching a collection of FASTA files"},{"location":"1-downloading-sketching-and-searching-a-collection-of-FASTA-files/#example-downloading-sketching-and-searching-a-collection-of-fasta-files","text":"sourmash-bio/sourmash-examples#1 Download 64 genomes from Awad et al., 2017 : curl -L https://osf.io/download/vbhy5 -o podar-ref.tar.gz tar xzf podar-ref.tar.gz Sketch them all in DNA space using default parameters, using GNU parallel per https://github.com/sourmash-bio/sourmash/issues/1796: parallel -j 8 sourmash sketch dna {} -o {}.sig --name-from-first ::: $(ls *.fa) Build a search database from all the signature files for k=31: sourmash sig cat *.sig -k 31 -o podar-ref.zip Search the database with one of the Shewanella genomes: sourmash search 63.fa.sig podar-ref.zip and you should see: similarity match ---------- ----- similarity match ---------- ----- 100.0% NC_011663.1 Shewanella baltica OS223, complete genome 32.1% NC_009665.1 Shewanella baltica OS185, complete genome","title":"Example: downloading, sketching, and searching a collection of FASTA files"},{"location":"2-creating-and-using-an-LCA-database-for-taxonomic-analysis/","text":"Example: creating and using an LCA database for taxonomic analysis sourmash-bio/sourmash-examples#2 First, download and sketch 64 genomes from Awad et al., 2017 using the instructions in Example: downloading, sketching, and searching a collection of FASTA files . You'll need podar-ref.zip . Next, you'll need podar-lineage.csv - curl -L https://osf.io/4yhjw/download -o podar-lineage.csv Now create an LCA database in SQL format: sourmash lca index podar-lineage.csv podar-ref.lca.sql podar-ref.zip \\ -F sql -C 3 --split-identifiers Extract one of the Shewanella genomes from podar-ref.zip using sourmash sig grep : sourmash sig grep OS223 podar-ref.zip -o shew-os223.sig and now you can classify genomes with lca classify : sourmash lca classify --query shew-os223.sig --db podar-ref.lca.sql and you should see it classified correctly: \"NC_011663.1 Shewanella baltica OS223, complete genome\",found,Bacteria,Proteobacteria,Gammaproteobacteria,Alteromonadales,Shewanellaceae,Shewanella,Shewanella baltica,Shewanella baltica OS223 You can use lca summarize to classify the genome as if it were a metagenome mixture, too: sourmash lca summarize --query shew-os223.sig --db podar-ref.lca.sql and you should see: 50.5% 278 Bacteria;Proteobacteria;Gammaproteobacteria;Alteromonadales;Shewanellaceae;Shewanella;Shewanella baltica;Shewanella baltica OS223 shew-os223.sig:38729c63 NC_011663.1 Shewanella baltica OS223, complete genome 100.0% 550 Bacteria;Proteobacteria;Gammaproteobacteria;Alteromonadales;Shewanellaceae;Shewanella;Shewanella baltica shew-os223.sig:38729c63 NC_011663.1 Shewanella baltica OS223, complete genome which indicates that about 50% of the content is not strain specific, and is shared with the other Shewanella in the collection.","title":"Example: creating and using an LCA database for taxonomic analysis"},{"location":"2-creating-and-using-an-LCA-database-for-taxonomic-analysis/#example-creating-and-using-an-lca-database-for-taxonomic-analysis","text":"sourmash-bio/sourmash-examples#2 First, download and sketch 64 genomes from Awad et al., 2017 using the instructions in Example: downloading, sketching, and searching a collection of FASTA files . You'll need podar-ref.zip . Next, you'll need podar-lineage.csv - curl -L https://osf.io/4yhjw/download -o podar-lineage.csv Now create an LCA database in SQL format: sourmash lca index podar-lineage.csv podar-ref.lca.sql podar-ref.zip \\ -F sql -C 3 --split-identifiers Extract one of the Shewanella genomes from podar-ref.zip using sourmash sig grep : sourmash sig grep OS223 podar-ref.zip -o shew-os223.sig and now you can classify genomes with lca classify : sourmash lca classify --query shew-os223.sig --db podar-ref.lca.sql and you should see it classified correctly: \"NC_011663.1 Shewanella baltica OS223, complete genome\",found,Bacteria,Proteobacteria,Gammaproteobacteria,Alteromonadales,Shewanellaceae,Shewanella,Shewanella baltica,Shewanella baltica OS223 You can use lca summarize to classify the genome as if it were a metagenome mixture, too: sourmash lca summarize --query shew-os223.sig --db podar-ref.lca.sql and you should see: 50.5% 278 Bacteria;Proteobacteria;Gammaproteobacteria;Alteromonadales;Shewanellaceae;Shewanella;Shewanella baltica;Shewanella baltica OS223 shew-os223.sig:38729c63 NC_011663.1 Shewanella baltica OS223, complete genome 100.0% 550 Bacteria;Proteobacteria;Gammaproteobacteria;Alteromonadales;Shewanellaceae;Shewanella;Shewanella baltica shew-os223.sig:38729c63 NC_011663.1 Shewanella baltica OS223, complete genome which indicates that about 50% of the content is not strain specific, and is shared with the other Shewanella in the collection.","title":"Example: creating and using an LCA database for taxonomic analysis"},{"location":"3-using-sourmash-tax-to-classify-a-metagenome/","text":"Example: using sourmash tax to classify a metagenome sourmash-bio/sourmash-examples#3 First, download and sketch 64 genomes from Awad et al., 2017 using the instructions in Example: downloading, sketching, and searching a collection of FASTA files . You'll need podar-ref.zip . Next, you'll need podar-lineage.csv - curl -L https://osf.io/4yhjw/download -o podar-lineage.csv Next we'll make a fake metagenome consisting of a signature created by merging two Shewanella baltica signatures. First, extract signatures with Shewanella in the name from podar-ref.zip : sourmash sig grep Shewanella podar-ref.zip -o shew-matches.sig Then, use sourmash sig merge to merge them into one signature: sourmash sig merge shew-matches.sig -o shew-merge.sig This is our fake metagenome that we'll use to demonstrate sourmash tax . Now that we've got our fake metagenome, run sourmash gather to find the minimum metagenome cover : sourmash gather shew-merge.sig podar-ref.zip -o out.csv and then run sourmash tax metagenome to classify this as a \"mixture\" using the matching genomes from out.csv and their taxonomy in podar-lineage.csv : sourmash tax -g out.csv -t podar-lineage.csv and you should see: ,genus,1.000,Bacteria;Proteobacteria;Gammaproteobacteria;Alteromonadales;Shewanellaceae;Shewanella,491c0a81,,1.000,7886000 ,species,1.000,Bacteria;Proteobacteria;Gammaproteobacteria;Alteromonadales;Shewanellaceae;Shewanella;Shewanella baltica,491c0a81,,1.000,7886000 which shows that this is 100% Shewanella, as, well expected :).","title":"Example: using `sourmash tax` to classify a metagenome"},{"location":"3-using-sourmash-tax-to-classify-a-metagenome/#example-using-sourmash-tax-to-classify-a-metagenome","text":"sourmash-bio/sourmash-examples#3 First, download and sketch 64 genomes from Awad et al., 2017 using the instructions in Example: downloading, sketching, and searching a collection of FASTA files . You'll need podar-ref.zip . Next, you'll need podar-lineage.csv - curl -L https://osf.io/4yhjw/download -o podar-lineage.csv Next we'll make a fake metagenome consisting of a signature created by merging two Shewanella baltica signatures. First, extract signatures with Shewanella in the name from podar-ref.zip : sourmash sig grep Shewanella podar-ref.zip -o shew-matches.sig Then, use sourmash sig merge to merge them into one signature: sourmash sig merge shew-matches.sig -o shew-merge.sig This is our fake metagenome that we'll use to demonstrate sourmash tax . Now that we've got our fake metagenome, run sourmash gather to find the minimum metagenome cover : sourmash gather shew-merge.sig podar-ref.zip -o out.csv and then run sourmash tax metagenome to classify this as a \"mixture\" using the matching genomes from out.csv and their taxonomy in podar-lineage.csv : sourmash tax -g out.csv -t podar-lineage.csv and you should see: ,genus,1.000,Bacteria;Proteobacteria;Gammaproteobacteria;Alteromonadales;Shewanellaceae;Shewanella,491c0a81,,1.000,7886000 ,species,1.000,Bacteria;Proteobacteria;Gammaproteobacteria;Alteromonadales;Shewanellaceae;Shewanella;Shewanella baltica,491c0a81,,1.000,7886000 which shows that this is 100% Shewanella, as, well expected :).","title":"Example: using sourmash tax to classify a metagenome"},{"location":"4-using-picklists-and-manifests-to-work-with-a-small-subset-of-a-large-database/","text":"Example: using picklists and manifests to work with a small subset of a large database sourmash-bio/sourmash-examples#4 Suppose you want to search, compare, or otherwise work with only a small set of genomes from GTDB - perhaps only the ones with \"Shewanella\" in their name. sourmash makes this easy! Start by downloading the GTDB genomic representatives database from the prepared databases . curl -JLO https://osf.io/3a6gn/download This will download a 1.7 GB file named gtdb-rs207.genomic-reps.dna.k31.zip . Extract a manifest Now extract a manifest containing all of the metadata about signatures in this zip file: sourmash sig manifest gtdb-rs207.genomic-reps.dna.k31.zip -o gtdb.mf --no-rebuild (Here, the --no-rebuild just uses the manifest included in the zip file, rather than regenerating it from scratch.) Use csvtk to extract the name column and then use grep to select only those with Shewanella in their name - csvtk cut -f name gtdb.mf | grep -i Shewanella > shew.names.csv You should see that you have 98 matches: wc -l shew.names.csv Make a picklist from the manifest row names Turn this list into a picklist file by providing a column header: echo name > shew-picklist.csv cat shew.names.csv >> shew-picklist.csv `` ## Get a query signature Run: ```shell sourmash sig grep GCA_002341165 gtdb-rs207.genomic-reps.dna.k31.zip -o shew-query.sig to pick out just one of the Shewanella signatures, to use as a search query. Search using the picklist Now you can search just the Shewanella genomes using the picklist: sourmash search shew-query.sig gtdb-rs207.genomic-reps.dna.k31.zip --picklist shew-picklist.csv:name:name This is much faster than searching the entire database (which contains 66k signatures) as long as you know you just want to search that specific list of Shewanella genomes. Note: You could use just the space-delimited identifiers as a picklist, too, by using ident as the column type in the argument to --picklist , above. Please see the picklist docs for details.","title":"Example: using picklists and manifests to work with a small subset of a large database"},{"location":"4-using-picklists-and-manifests-to-work-with-a-small-subset-of-a-large-database/#example-using-picklists-and-manifests-to-work-with-a-small-subset-of-a-large-database","text":"sourmash-bio/sourmash-examples#4 Suppose you want to search, compare, or otherwise work with only a small set of genomes from GTDB - perhaps only the ones with \"Shewanella\" in their name. sourmash makes this easy! Start by downloading the GTDB genomic representatives database from the prepared databases . curl -JLO https://osf.io/3a6gn/download This will download a 1.7 GB file named gtdb-rs207.genomic-reps.dna.k31.zip .","title":"Example: using picklists and manifests to work with a small subset of a large database"},{"location":"4-using-picklists-and-manifests-to-work-with-a-small-subset-of-a-large-database/#extract-a-manifest","text":"Now extract a manifest containing all of the metadata about signatures in this zip file: sourmash sig manifest gtdb-rs207.genomic-reps.dna.k31.zip -o gtdb.mf --no-rebuild (Here, the --no-rebuild just uses the manifest included in the zip file, rather than regenerating it from scratch.) Use csvtk to extract the name column and then use grep to select only those with Shewanella in their name - csvtk cut -f name gtdb.mf | grep -i Shewanella > shew.names.csv You should see that you have 98 matches: wc -l shew.names.csv","title":"Extract a manifest"},{"location":"4-using-picklists-and-manifests-to-work-with-a-small-subset-of-a-large-database/#make-a-picklist-from-the-manifest-row-names","text":"Turn this list into a picklist file by providing a column header: echo name > shew-picklist.csv cat shew.names.csv >> shew-picklist.csv `` ## Get a query signature Run: ```shell sourmash sig grep GCA_002341165 gtdb-rs207.genomic-reps.dna.k31.zip -o shew-query.sig to pick out just one of the Shewanella signatures, to use as a search query.","title":"Make a picklist from the manifest row names"},{"location":"4-using-picklists-and-manifests-to-work-with-a-small-subset-of-a-large-database/#search-using-the-picklist","text":"Now you can search just the Shewanella genomes using the picklist: sourmash search shew-query.sig gtdb-rs207.genomic-reps.dna.k31.zip --picklist shew-picklist.csv:name:name This is much faster than searching the entire database (which contains 66k signatures) as long as you know you just want to search that specific list of Shewanella genomes. Note: You could use just the space-delimited identifiers as a picklist, too, by using ident as the column type in the argument to --picklist , above. Please see the picklist docs for details.","title":"Search using the picklist"},{"location":"5-searching-collection-manifests-directly/","text":"Example: searching collection manifests directly sourmash-bio/sourmash-examples#5 This example follows from Example: using picklists and manifests to work with a small subset of a large database . In #4, we see how to use a picklist to search a small subset of GTDB. But we can make this even simpler. Build a manifest that you can search directly Specifying the picklist is cumbersome if you want to search this database repeatedly. sourmash also lets you build a collection manifest that contains pointers into the database, using sig check ( doc link ). To create the collection manifest, first make a \"pathlist\" file, a text file containing the paths of sourmash databases you want to work with. In this case, the file will only contain one pathname, the GTDB database. ls gtdb-rs207.genomic-reps.dna.k31.zip > pathlist.txt Then, run: sourmash sig check --picklist shew-picklist.csv:name:name \\ pathlist.txt --save-manifest shew-mf.csv which will create a manifest in shew-mf.csv for all the entries that match the given picklist. You can now search this manifest file directly: sourmash search shew-query.sig shew-mf.csv","title":"Example: searching collection manifests directly"},{"location":"5-searching-collection-manifests-directly/#example-searching-collection-manifests-directly","text":"sourmash-bio/sourmash-examples#5 This example follows from Example: using picklists and manifests to work with a small subset of a large database . In #4, we see how to use a picklist to search a small subset of GTDB. But we can make this even simpler.","title":"Example: searching collection manifests directly"},{"location":"5-searching-collection-manifests-directly/#build-a-manifest-that-you-can-search-directly","text":"Specifying the picklist is cumbersome if you want to search this database repeatedly. sourmash also lets you build a collection manifest that contains pointers into the database, using sig check ( doc link ). To create the collection manifest, first make a \"pathlist\" file, a text file containing the paths of sourmash databases you want to work with. In this case, the file will only contain one pathname, the GTDB database. ls gtdb-rs207.genomic-reps.dna.k31.zip > pathlist.txt Then, run: sourmash sig check --picklist shew-picklist.csv:name:name \\ pathlist.txt --save-manifest shew-mf.csv which will create a manifest in shew-mf.csv for all the entries that match the given picklist. You can now search this manifest file directly: sourmash search shew-query.sig shew-mf.csv","title":"Build a manifest that you can search directly"},{"location":"6-creating-a-conda-environment-with-the-latest-version-of-sourmash/","text":"Example: creating a conda environment with the latest version of sourmash sourmash-bio/sourmash-examples#6 Per @bluegenes tested by @jessicalumian. Create a file sourmash-latest.yml containing the dependencies, plus a pointer to the latest version of sourmash: channels: - conda-forge - bioconda - defaults dependencies: - python=3.9 - rust - pip - pip: - git+https://github.com/sourmash-bio/sourmash@latest and then run: conda env create -n sourmash-latest -f sourmash-latest.yml Wait for it to build (~5 min?) and then conda activate sourmash-latest and then run: sourmash info","title":"Example: creating a conda environment with the latest version of sourmash"},{"location":"6-creating-a-conda-environment-with-the-latest-version-of-sourmash/#example-creating-a-conda-environment-with-the-latest-version-of-sourmash","text":"sourmash-bio/sourmash-examples#6 Per @bluegenes tested by @jessicalumian. Create a file sourmash-latest.yml containing the dependencies, plus a pointer to the latest version of sourmash: channels: - conda-forge - bioconda - defaults dependencies: - python=3.9 - rust - pip - pip: - git+https://github.com/sourmash-bio/sourmash@latest and then run: conda env create -n sourmash-latest -f sourmash-latest.yml Wait for it to build (~5 min?) and then conda activate sourmash-latest and then run: sourmash info","title":"Example: creating a conda environment with the latest version of sourmash"},{"location":"7-using-genomeupdater.sh-and-sketch-fromfile-to-build-a-custom-database/","text":"Example: using genome_updater.sh and sketch fromfile to build a custom database sourmash-bio/sourmash-examples#7 I wanted to build a database with custom k-size values containing all genomes under taxid Shewanella . First, I installed https://github.com/pirovc/genome_updater: mamba install -y genome_updater Then I ran: genome_updater.sh -T 22 -d \"genbank\" -f \"genomic.fna.gz\" -o shew -t 6 which produced shew/2022-05-06_13-58-43/ . Next, I ran: ../database-examples/genbank-to-fromfile.py shew/2022-05-06_13-58-43/files/GCA_* \\ -S shew/2022-05-06_13-58-43/assembly_summary.txt -o shewanella.csv (using a checkout of https://github.com/sourmash-bio/database-examples at this release .) This resulted in the following output: Loaded 439 rows from 'shew/2022-05-06_13-58-43/assembly_summary.txt' Any survivable errors will be reported to 'shewanella.csv.error-report.txt' processing file 'GCA_000712635.2_SXM1.0_for_version_1_of_the_Shewanella_xiamenenprocessing file 'GCA_000947195.1_Shewanella_algae_MARS_14_genomic.fna.gz' (42/43processing file 'GCA_900079515.1_Shewanella_sp.Alg231_23_genomic.fna.gz' (426/43processing file 'GCA_900156405.1_IMG-taxon_2681812898_annotated_assembly_genomicprocessing file 'GCA_913058445.1_SRR3933262_bin.2_MetaBAT_v2.12.1_MAG_genomic.fnprocessed 439 files. --- wrote 439 entries to 'shewanella.csv' 439 entries had only protein (and no genome) files. Using this, I could then run sourmash sketch fromfile shewanella.csv -p <my parameters here> ...","title":"Example: using `genome_updater.sh` and `sketch fromfile` to build a custom database"},{"location":"7-using-genomeupdater.sh-and-sketch-fromfile-to-build-a-custom-database/#example-using-genome_updatersh-and-sketch-fromfile-to-build-a-custom-database","text":"sourmash-bio/sourmash-examples#7 I wanted to build a database with custom k-size values containing all genomes under taxid Shewanella . First, I installed https://github.com/pirovc/genome_updater: mamba install -y genome_updater Then I ran: genome_updater.sh -T 22 -d \"genbank\" -f \"genomic.fna.gz\" -o shew -t 6 which produced shew/2022-05-06_13-58-43/ . Next, I ran: ../database-examples/genbank-to-fromfile.py shew/2022-05-06_13-58-43/files/GCA_* \\ -S shew/2022-05-06_13-58-43/assembly_summary.txt -o shewanella.csv (using a checkout of https://github.com/sourmash-bio/database-examples at this release .) This resulted in the following output: Loaded 439 rows from 'shew/2022-05-06_13-58-43/assembly_summary.txt' Any survivable errors will be reported to 'shewanella.csv.error-report.txt' processing file 'GCA_000712635.2_SXM1.0_for_version_1_of_the_Shewanella_xiamenenprocessing file 'GCA_000947195.1_Shewanella_algae_MARS_14_genomic.fna.gz' (42/43processing file 'GCA_900079515.1_Shewanella_sp.Alg231_23_genomic.fna.gz' (426/43processing file 'GCA_900156405.1_IMG-taxon_2681812898_annotated_assembly_genomicprocessing file 'GCA_913058445.1_SRR3933262_bin.2_MetaBAT_v2.12.1_MAG_genomic.fnprocessed 439 files. --- wrote 439 entries to 'shewanella.csv' 439 entries had only protein (and no genome) files. Using this, I could then run sourmash sketch fromfile shewanella.csv -p <my parameters here> ...","title":"Example: using genome_updater.sh and sketch fromfile to build a custom database"},{"location":"9-install-sourmash-with-pip-or-with-conda/","text":"Example: install sourmash with pip or with conda sourmash-bio/sourmash-examples#9 Installing sourmash on Mac OS or Linux To install sourmash with pip, a common Python installer, run: pip install sourmash See the official Python docs for installing packages for details. To install sourmash with bioconda , run: conda install sourmash You'll need to have the bioconda and conda-forge channels configured in your conda install; see the bioconda documentation . Installing sourmash on Windows We do not yet officially support Windows, but sourmash can be installed on Windows. Visit the windows install issue to see the current status!","title":"Example: install sourmash with pip or with conda"},{"location":"9-install-sourmash-with-pip-or-with-conda/#example-install-sourmash-with-pip-or-with-conda","text":"sourmash-bio/sourmash-examples#9","title":"Example: install sourmash with pip or with conda"},{"location":"9-install-sourmash-with-pip-or-with-conda/#installing-sourmash-on-mac-os-or-linux","text":"To install sourmash with pip, a common Python installer, run: pip install sourmash See the official Python docs for installing packages for details. To install sourmash with bioconda , run: conda install sourmash You'll need to have the bioconda and conda-forge channels configured in your conda install; see the bioconda documentation .","title":"Installing sourmash on Mac OS or Linux"},{"location":"9-install-sourmash-with-pip-or-with-conda/#installing-sourmash-on-windows","text":"We do not yet officially support Windows, but sourmash can be installed on Windows. Visit the windows install issue to see the current status!","title":"Installing sourmash on Windows"},{"location":"examples/","text":"All examples Go to: Home | All categories Example: install sourmash with pip or with conda Example: creating a conda environment with the latest version of sourmash Example: creating and using an LCA database for taxonomic analysis Example: downloading, sketching, and searching a collection of FASTA files Example: searching collection manifests directly Example: using genome_updater.sh and sketch fromfile to build a custom database Example: using sourmash tax to classify a metagenome Example: using picklists and manifests to work with a small subset of a large database","title":"All examples"},{"location":"examples/#all-examples","text":"Go to: Home | All categories Example: install sourmash with pip or with conda Example: creating a conda environment with the latest version of sourmash Example: creating and using an LCA database for taxonomic analysis Example: downloading, sketching, and searching a collection of FASTA files Example: searching collection manifests directly Example: using genome_updater.sh and sketch fromfile to build a custom database Example: using sourmash tax to classify a metagenome Example: using picklists and manifests to work with a small subset of a large database","title":"All examples"},{"location":"l-advanced/","text":"advanced examples Example: creating a conda environment with the latest version of sourmash Example: searching collection manifests directly","title":"advanced examples"},{"location":"l-advanced/#advanced-examples","text":"Example: creating a conda environment with the latest version of sourmash Example: searching collection manifests directly","title":"advanced examples"},{"location":"l-databases/","text":"creating databases Example: using genome_updater.sh and sketch fromfile to build a custom database","title":"creating databases"},{"location":"l-databases/#creating-databases","text":"Example: using genome_updater.sh and sketch fromfile to build a custom database","title":"creating databases"},{"location":"l-developer/","text":"examples for developers Example: creating a conda environment with the latest version of sourmash","title":"examples for developers"},{"location":"l-developer/#examples-for-developers","text":"Example: creating a conda environment with the latest version of sourmash","title":"examples for developers"},{"location":"l-fasta/","text":"working with FASTA files Example: downloading, sketching, and searching a collection of FASTA files","title":"working with FASTA files"},{"location":"l-fasta/#working-with-fasta-files","text":"Example: downloading, sketching, and searching a collection of FASTA files","title":"working with FASTA files"},{"location":"l-gtdb-rs207/","text":"examples using GTDB RS207 Example: using picklists and manifests to work with a small subset of a large database","title":"examples using GTDB RS207"},{"location":"l-gtdb-rs207/#examples-using-gtdb-rs207","text":"Example: using picklists and manifests to work with a small subset of a large database","title":"examples using GTDB RS207"},{"location":"l-intermediate/","text":"intermediate examples Example: using picklists and manifests to work with a small subset of a large database","title":"intermediate examples"},{"location":"l-intermediate/#intermediate-examples","text":"Example: using picklists and manifests to work with a small subset of a large database","title":"intermediate examples"},{"location":"l-intro/","text":"introductory examples Example: install sourmash with pip or with conda","title":"introductory examples"},{"location":"l-intro/#introductory-examples","text":"Example: install sourmash with pip or with conda","title":"introductory examples"},{"location":"l-manifests/","text":"examples of using manifests Example: searching collection manifests directly","title":"examples of using manifests"},{"location":"l-manifests/#examples-of-using-manifests","text":"Example: searching collection manifests directly","title":"examples of using manifests"},{"location":"l-needs-improvement/","text":"examples that need improvement Example: searching collection manifests directly","title":"examples that need improvement"},{"location":"l-needs-improvement/#examples-that-need-improvement","text":"Example: searching collection manifests directly","title":"examples that need improvement"},{"location":"l-picklists/","text":"examples using picklists Example: using picklists and manifests to work with a small subset of a large database","title":"examples using picklists"},{"location":"l-picklists/#examples-using-picklists","text":"Example: using picklists and manifests to work with a small subset of a large database","title":"examples using picklists"},{"location":"l-sourmash-v4.0/","text":"examples using sourmash v4.x Example: downloading, sketching, and searching a collection of FASTA files","title":"examples using sourmash v4.x"},{"location":"l-sourmash-v4.0/#examples-using-sourmash-v4x","text":"Example: downloading, sketching, and searching a collection of FASTA files","title":"examples using sourmash v4.x"},{"location":"l-sourmash-v4.2/","text":"examples using sourmash v4.2 functionality Example: using sourmash tax to classify a metagenome","title":"examples using sourmash v4.2 functionality"},{"location":"l-sourmash-v4.2/#examples-using-sourmash-v42-functionality","text":"Example: using sourmash tax to classify a metagenome","title":"examples using sourmash v4.2 functionality"},{"location":"l-sourmash-v4.4/","text":"examples using sourmash v4.4 functionality Example: creating and using an LCA database for taxonomic analysis","title":"examples using sourmash v4.4 functionality"},{"location":"l-sourmash-v4.4/#examples-using-sourmash-v44-functionality","text":"Example: creating and using an LCA database for taxonomic analysis","title":"examples using sourmash v4.4 functionality"},{"location":"l-taxonomy/","text":"examples of using taxonomy Example: creating and using an LCA database for taxonomic analysis Example: using sourmash tax to classify a metagenome","title":"examples of using taxonomy"},{"location":"l-taxonomy/#examples-of-using-taxonomy","text":"Example: creating and using an LCA database for taxonomic analysis Example: using sourmash tax to classify a metagenome","title":"examples of using taxonomy"},{"location":"labels/","text":"All categories Go to: Home | All examples introductory examples - 1 examples creating databases - 1 examples advanced examples - 2 examples examples for developers - 1 examples examples of using manifests - 1 examples examples that need improvement - 1 examples examples using GTDB RS207 - 1 examples examples using picklists - 1 examples intermediate examples - 1 examples examples of using taxonomy - 2 examples examples using sourmash v4.2 functionality - 1 examples examples using sourmash v4.4 functionality - 1 examples working with FASTA files - 1 examples examples using sourmash v4.x - 1 examples","title":"All categories"},{"location":"labels/#all-categories","text":"Go to: Home | All examples introductory examples - 1 examples creating databases - 1 examples advanced examples - 2 examples examples for developers - 1 examples examples of using manifests - 1 examples examples that need improvement - 1 examples examples using GTDB RS207 - 1 examples examples using picklists - 1 examples intermediate examples - 1 examples examples of using taxonomy - 2 examples examples using sourmash v4.2 functionality - 1 examples examples using sourmash v4.4 functionality - 1 examples working with FASTA files - 1 examples examples using sourmash v4.x - 1 examples","title":"All categories"}]}